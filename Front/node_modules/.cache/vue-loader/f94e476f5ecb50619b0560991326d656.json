{"remainingRequest":"/Users/phglz/Dropbox/My Mac (Phglzs-MacBook)/Desktop/GalazStudio/BG/bitgol/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/phglz/Dropbox/My Mac (Phglzs-MacBook)/Desktop/GalazStudio/BG/bitgol/src/components/OpenBets/vvse.vue?vue&type=template&id=e353c97a&","dependencies":[{"path":"/Users/phglz/Dropbox/My Mac (Phglzs-MacBook)/Desktop/GalazStudio/BG/bitgol/src/components/OpenBets/vvse.vue","mtime":1611644480290},{"path":"/Users/phglz/Dropbox/My Mac (Phglzs-MacBook)/Desktop/GalazStudio/BG/bitgol/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/phglz/Dropbox/My Mac (Phglzs-MacBook)/Desktop/GalazStudio/BG/bitgol/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/phglz/Dropbox/My Mac (Phglzs-MacBook)/Desktop/GalazStudio/BG/bitgol/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/phglz/Dropbox/My Mac (Phglzs-MacBook)/Desktop/GalazStudio/BG/bitgol/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}