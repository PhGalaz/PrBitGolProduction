{"remainingRequest":"/Users/phglz/Dropbox/My Mac (Phglzs-MacBook)/Desktop/GalazStudio/BG/bitgol/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/phglz/Dropbox/My Mac (Phglzs-MacBook)/Desktop/GalazStudio/BG/bitgol/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/phglz/Dropbox/My Mac (Phglzs-MacBook)/Desktop/GalazStudio/BG/bitgol/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/phglz/Dropbox/My Mac (Phglzs-MacBook)/Desktop/GalazStudio/BG/bitgol/src/components/OpenBets/lvsv.vue?vue&type=template&id=82a133a0&","dependencies":[{"path":"/Users/phglz/Dropbox/My Mac (Phglzs-MacBook)/Desktop/GalazStudio/BG/bitgol/src/components/OpenBets/lvsv.vue","mtime":1611636694099},{"path":"/Users/phglz/Dropbox/My Mac (Phglzs-MacBook)/Desktop/GalazStudio/BG/bitgol/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/phglz/Dropbox/My Mac (Phglzs-MacBook)/Desktop/GalazStudio/BG/bitgol/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/phglz/Dropbox/My Mac (Phglzs-MacBook)/Desktop/GalazStudio/BG/bitgol/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/phglz/Dropbox/My Mac (Phglzs-MacBook)/Desktop/GalazStudio/BG/bitgol/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}